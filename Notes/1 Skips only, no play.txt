Game with only skips, opponent does not play

 - You have no cards in hand: draw
 - There is only 1 card left / you know the top card is an exploding kitten: skip if you can, otherwise die
 - There are x cards left, you have y skips in hand, opponent never plays any cards:
     - Draw: 1/x chance of losing. (x-1)/x chance of getting +1 skip -> OPT(x-1, y+1)
     - Skip: -1 skip, 1/x chance of winning, (x-1)/x chance of game continuing -> OPT(x-2, y-1)
 - Let winChance(deckSize, skipCount): win percentage // Assuming opponent never plays cards
    - winChance(1, 0) = 0 // You lose: you must draw and die
    - winChance(1, y) = 1 // Assuming y > 0; you skip and your opponent loses
    - winChance(x, 0) = (x-1)/x * [(1/x-1) + (x-2)/(x-1) * winChance(x-2, 1)] // You draw
    - winChance(x, y) = 
       - draw: (x-1)/x * [1/(x-1) + (x-2)/(x-1) * winChance(x-2, 1)]
       - skip: 1/x + (x-1)/x * winChance(x-1, y-1)
 - Try running `results = calc.winChanceDP(15,5)`

 ```
export function winChanceDP(deckMax, skipMax) {
    skipMax += deckMax - 1;
    const result = [];     // [deck][skip]
    for (let i = 0; i <= deckMax; i++) result.push(Array(skipMax + 1));
    
    for (let x = 1; x <= deckMax; x++) {
        for (let y = 0; y <= skipMax; y++) {
            //console.log(result);//
            if (x === 1) {
                result[x][y] = y > 0 ? {winRate: 1, move: "skip"} : {winRate: 0, move: "draw"};
                continue;
            }
            const draw = x === 2 ? 0.5 : (x-1)/x * (1/(x-1) + (x-2)/(x-1)*result[x-2][y+1]?.winRate);
            const skip = y <= 0 ? -1 : 1/x + (x-1)/x * result[x-1][y-1].winRate;
            result[x][y] = draw >= skip ? {winRate: draw, move: "draw"} : {winRate: skip, move: "skip"}
        }
    }
    return result;
}
```

1 card in deck:
 - 0 skips = draw and explode
 - 1+ skips = skip and opponent will draw and explode
 *Analysis is obvious
2 cards in deck:
 - 0 skips = draw and 50% chance of exploding, otherwise opponent draws and explodes
 - 1 skip = 50%; draw & skip the same. draw: win iff top card is no exploding kitten; skip: win iff top card is exploding kitten
 - 2+ skips = skip your way to victory
 *50-50 makes sense
3 cards in deck:
 - 0 skips = 1/3 chance to die from draw, 1/3 chance to then win from draw, 1/3 chance to win by skipping on 1 card
 - 1-2 skips: Drawing and skipping is the same. You just bet on which card you'd be willing to draw when it comes down to it
 - 3+ skips: skip your way to victory
 *You will only need to draw once, max
4 cards in deck:
 - 0 skips: Draw, 25-25 to win/lose immediately. Otherwise case 2 cards | 1 skip
 - 1-3 skips: Drawing and skipping is the same. All choices end up with 75% chance of winning 
 - 4+ skips: skip your way to victory
 *Chance with no skips is lower because you'll need to draw twice
5 cards in deck:
 - 0: Draw, 0.5 * 2/5 + (3|1=2/3) * 3/5 = 3/5
 - 1: Draw & skip is the same, 3/5
 - 2-4: Draw & skip is the same, 4/5
 - 5+: win
 *Interesting how drawing and skipping comes down to the same thing
6 cards in deck:
 - 0: Draw, 0.5 * 1/6 + (4|1=3/4) * 4/6 = 2/3
 - 1-2: Draw & skip the same, 2/3
 - 3-5: Draw & skip the same, 5/6
 - 6+: win
 * It looks like the chance comes down to how many cards you'll end up drawing
 * So far up to here it looks like draw and skip don't really matter
7 cards in deck:
 - 0: Draw, 4/7 chance of win (draw 3 cards in all since you'll get a skip)
 - 1-3: 5/7, draw & skip same
 - 4-6: 6/7, draw & skip same
8-10 cards in deck:
- 0: Draw
- 1+: Draw & skip same, unless you can skip all

Conclusion: It doesn't really matter when you skip, as long as you don't draw more cards than you have to
 - Aka it doesn't matter whether you skip now or later
 - (I had confusion when looking at the json file originally because I coded "choose draw if draw is a tie with skip";
    that wasted some of my time when analyzing)
 - (And then after that I still had some choices that were not "both" because of rounding errors so I had to go back and fix that)

 Experimental Testing (10000 tries per test)
 10 cards: 6001/10000 = 60.01% (pretty much exactly 60%)
 9 cards: 6645 (pretty close to 66.67%)
 8 cards: 6266 = ~62.50%
 7 cards: 5721 = ~57.24%
 6 cards: 6619 = ~66.67
  -- with 100,000 tries per test now --
 5 cards: 59855 = ~60%
 4 cards: 50215 = ~50%
 3 cards: 66756 = ~66.67%
 2 cards: 50072 = ~50%
 1 cards: 0 = 0%